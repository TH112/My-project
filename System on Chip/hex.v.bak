module hex
(
 input iClk,
 input iReset_n,
 input iChip_select_n,
 input iWrite_n,
 input [31:0] iHex_data,
 output reg [0:6] HEX
);
 always@(posedge iClk, negedge iReset_n)
 begin
 if(~iReset_n)
 begin
 	HEX <= 7'b1111111;
 end
 else
	begin
	if(~iChip_select_n & ~iWrite_n)
		begin
	//	always @(*)
	
				case(iHex_data[4:0])
					4'b0000: HEX <= 7'b0000001;
					4'b0001: HEX <= 7'b1001111;
					4'b0010: HEX <= 7'b0010010;
					4'b0011: HEX <= 7'b0000110;
					4'b0100: HEX <= 7'b1001100;
					4'b0101: HEX <= 7'b0100100;
					4'b0110: HEX <= 7'b0100000;
					4'b0111: HEX <= 7'b0001111;
					4'b1000: HEX <= 7'b0000000;
					4'b1001: HEX <= 7'b0000100;
					4'b1010: HEX <= 7'b0001000;
					4'b1011: HEX <= 7'b1100000;
					4'b1100: HEX <= 7'b0110001;
					4'b1101: HEX <= 7'b1000010;
					4'b1110: HEX <= 7'b0110000;
					4'b1111: HEX <= 7'b0111000;
                   5'b10000: HEX <= 7'b1111110;
				endcase
		end
	end
 end
endmodule
